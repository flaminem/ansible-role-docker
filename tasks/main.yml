---
- name: "Ensure system is x86_64"
  fail: msg="Docker requires a 64bit system architecture"
  when: "ansible_architecture != 'x86_64'"

- name: see if docker is installed
  stat: path=/usr/bin/docker
  register: docker_installed

- name: Include vars for docker-ce
  include_vars: docker-ce.yml
  when:
    - docker_ver == "docker_ce"

- name: Include vars for docker.io
  include_vars: docker-io.yml
  when:
    - docker_ver == "docker_io"

- name: Remove all other's docker version packages
  package: name="{{ item }}" state=absent update_cache=yes
  with_items:
    - "{{ docker_remove_packages_name }}"

- name: Install required packages
  package: name="{{ item }}" state=latest update_cache=yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  when:
    - docker_ver == "docker_ce"

- name: add docker apt key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when:
    - docker_ver == "docker_ce"

- name: add docker repository
  apt_repository: repo='deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable' state=present update_cache=yes 
  when:
    - docker_ver == "docker_ce"

- name: install docker
  package: name="{{ item }}" state=present update_cache=yes
  with_items:
      - "{{docker_packages_name}}"
  notify: start docker

- name: "Ensure GRUB_CMDLINE_LINUX is updated"
  #lineinfile: dest=/etc/default/grub state=present line='GRUB_CMDLINE_LINUX="$GRUB_CMDLINE_LINUX cgroup_enable=memory swapaccount=1"'
  lineinfile: dest=/etc/default/grub regexp='^(GRUB_CMDLINE_LINUX=".*)"$' line='\1 cgroup_enable=memory swapaccount=1"' backrefs=yes
  when:
    - not docker_installed.stat.exists

- name: "Update grub.conf"
  command: update-grub
  when:
    - not docker_installed.stat.exists

- name: Add docker service on boot
  service: name=docker state=started enabled=yes

- name: "Ensure DEFAULT_FORWARD_POLICY in /etc/default/ufw is updated"
  lineinfile: dest=/etc/default/ufw regexp='^(DEFAULT_FORWARD_POLICY=").*"$' line='\1ACCEPT"' backrefs=yes
  notify: reload ufw
  tags: [docker,firewall]

# Need Certificat ? Only in local
#- name: "Add docker port 2376/TCP "
#  ufw: rule=allow port=2376 proto=tcp
#  notify: reload ufw
#  tags: [docker,firewall]

#- name: "Start UFW rules"
#  service: name=ufw state=started
#  tags: [docker,firewall]

- name: Install python3-docker
  package: name=python3-docker state=latest update_cache=yes
